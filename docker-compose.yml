services:
  app:
    hostname: app
    restart: always
    ports:
      - "8080:8080"
    environment:
      POSTGRES_URL: postgresql://user:password@localhost:5432/db"
      DATABASE_HOST: localhost
      DATABASE_NAME: db
      DATABASE_PORT: 5432
      DATABASE_USER: user
      DATABASE_PASSWORD: password
      RABBITMQ_CHANNEL: amqp://user:user@localhost:5672/
    build:
      context: ./backend
      dockerfile: build/Dockerfile.app
    depends_on:
      rabbitmq:
        condition: service_healthy

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  migrations:
    build:
      context: ./infra/database
      dockerfile: Dockerfile
    container_name: migrations
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/db
    depends_on:
      - postgres
    networks:
      - app-network

  rabbitmq:
    container_name: rabbitmq
    build: ./infraestructure/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    expose:
      - "5672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 2s
      timeout: 2s
      retries: 20
    restart: always

  predictor:
    build:
      context: ./predictor
      dockerfile: Dockerfile
    container_name: predictor
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq

volumes:
  postgres_data:
