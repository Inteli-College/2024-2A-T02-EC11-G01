volumes:
  postgres_data:
  grafana_data:

services:
  app:
    container_name: app
    hostname: app
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - ./backend/.env
    build:
      context: ./backend
      dockerfile: build/Dockerfile.app
    depends_on:
      rabbitmq:
        condition: service_healthy

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # migrations:
  #   build:
  #     context: ./infra/database
  #     dockerfile: Dockerfile
  #   container_name: migrations
  #   environment:
  #     - DATABASE_URL=postgresql://user:password@postgres:5432/db
  #   depends_on:
  #     - postgres
  #   networks:
  #     - app-network

  prometheus:
    container_name: prometheus-service
    image: prom/prometheus
    restart: always
    extra_hosts:
      - host.docker.internal:host-gateway
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./infraestructure/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    container_name: grafana
    image: grafana/grafana-oss:latest
    user: "0"
    environment:
      GF_PATHS_CONFIG: /etc/grafana/grafana_settings.ini
    ports:
      - "3000:3000"
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infraestructure/grafana/grafana_settings.ini:/etc/grafana/grafana_settings.ini

  rabbitmq:
    container_name: rabbitmq
    build: ./infraestructure/rabbitmq
    ports:
      - "15672:15672"
    expose:
      - "5672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 2s
      timeout: 2s
      retries: 20
    restart: always
